{
  "data": [
    {
      "image": "wazone.png",
      "title": "WaZone",
      "desc": "Web base app for blasting, and creating bot whatsapp.",
      "backendRole": "Creating API with repository design pattern architecture (controller, service, repository, dto/dio), manjorly for Crud Operation, creating services for storing files at GCP (Google Clod Platform) and Firebase, Create Login with JwtServices, Implement Two Factor Authentication (2FA) with TOTP Algorithm (Google/Microsoft Authenticator), Create API docs with swagger and compodoc, creating services for sending e-mail, creating socket to listen whatsapp connection, creating bot feature.",
      "frontendRole": "Create interactive and responsive web app interface using React Typescript and TailwindCSS, fetch data from api with axios and manage it with state management, creating socket listener to get events from backend, creating otp feature to match the code from user and the authenticator, create forgot password and reset password.",
      "devopsRole": "Creating shell script to deploy app to the server including go to project repository, pulling last changes from github/gitlab, installing dependencies, building app, restaring pm2 services, split api for staging and production.",
      "tags": [
        "Typescript",
        "React",
        "TailwindCSS",
        "NestJS",
        "Firebase",
        "GCP",
        "Socket.io",
        "Swagger",
        "Compodoc",
        "Postman"
      ],
      "links": "https://app.wazone.id"
    },
    {
      "image": "benefits_indonesia.png",
      "title": "Benefits Indonesia",
      "desc": "Dating App for Indonesian Couples.",
      "frontendRole": "Create web app for administrative purposes (accepting and rejecting profile verification or user reports, crud coins and plans), creating architecure hierarchy for storing state management, entity, enums, and etc, creating forgot and reset password pages, creating download apps page on landing page sites.",
      "backendRole": "Creating API with repository design pattern architecture (controller, service, repository, dto/dio), create plan and features crud for integrations use in payment gateway, creating services for login with jwt auth, fixing bugs, creating mailing services for notify user about profile verification and reset passwords.",
      "devopsRole": "Creating shell script to deploy app to the server including go to project repository, pulling last changes from github/gitlab, installing dependencies, building app, restaring pm2 services, split api for staging and production.",
      "tags": [
        "Typescript",
        "NestJS",
        "Swagger",
        "Firebase",
        "React",
        "TailwindCSS",
        "Swagger",
        "Compodoc",
        "Postman",
        "Nginx"
      ],
      "links": "https://benefits.co.id/",
      "demo": "https://youtube.com/watch?v=TIb8dPmRYCU"
    },
    {
      "image": "elroi.png",
      "title": "Elroi Church",
      "desc": "Webapp for Elroi Church, a Christian church located at sawangan.",
      "backendRole": "Creating Api for Elroi Church, and Elroi Church Admin, Change the orm of the app from typegoose to mongoose, Creating Api Documentation with swagger, compodoc and postman, implementing dto and repository design pattern, create giving feature using Mitrans Payment Gateway, Deploy App to the server.",
      "devopsRole": "Creating shell script to deploy app to the server including go to project repository, pulling last changes from github/gitlab, installing dependencies, building app, restaring pm2 services.",
      "tags": [
        "NestJS",
        "Firebase Storage",
        "Nginx",
        "Swagger",
        "Compodoc",
        "Postman"
      ],
      "links": "https://www.elroichurch.com/"
    }
  ]
}
